===========================
== suPHP Apache-Modul    ==
===========================

Installation
------------

1. Einführung

Das Zusammenspiel zwischen dem suPHP-Apache-Modul und suPHP selbst bietet einen 
einfachen Weg, um PHP-Scripts unter unterschiedlichen User-IDs auf dem gleichen 
Server auszuführen.

Es bietet Sicherheit, weil die PHP-Scripts fortan nicht mehr unter der User-ID 
des Webservers laufen.
Dadurch wird der Einsatz von PHPs "Safe Mode", der viele Einschränkungen beim 
Programmieren in PHP mit sich bringt, in der Regel überflüssig.

Bitte stelle sicher, dass du die README-Datei in diesem Verzeichnis und auch 
sowohl die README- als auch die INSTALL-Datei im Hauptverzeichnis der 
suPHP-Distribution gelesen hast.


2. Kurz und bündig

In diesem Abschnitt vermittle ich die wichtigsten Informationen für Leute, die 
bereits wissen, wie sie den Apache-Server mit zusätzlichen Modulen kompilieren 
können.
Wenn du damit nicht vertraut bist, findest du im dritten Teil dieses Handbuchs 
eine Schritt-für-Schritt-Anleitung.

mod_suphp besteht nur aus einer Datei, "mod_suphp.c". Wenn das suPHP-Binary 
nicht im Standardpfad liegt (/usr/sbin/suphp), musst du die entsprechende Zeile 
in mod_suphp.c anpassen, bevor du es mit dem configure-Script zu den 
Apache-Sourcen hinzufügst.

Es sollte möglich sein, mod_suphp als dynamisch ladbares Modul (DSO) zu 
kompilieren; dies habe ich jedoch nicht getestet.

Informationen darüber, wie du mod_suphp konfigurieren kannst, findest du in der 
Datei "CONFIG" in diesem Verzeichnis.

Bitte beachte, dass mod_suphp für Apache 1.3.22 entwickelt wurde und von daher 
möglicherweise nicht mit anderen Versionen (insbesondere Apache 2.x) 
zusammenarbeitet.

suPHP wurde für Linux entwickelt; vielleicht läuft es auch auf einigen anderen 
*NIX-Derivaten.
Wenn du es auf einem anderen System getestet hast und es dort funktioniert, sag 
mir bitte Bescheid.


3. Schritt für Schritt

I. Apache-Sourcen

Wenn du bereits einen Apache mit mod_so (DSO-Unterstützung) am Laufen hast, 
gehe bitte direkt zu Abschnitt II.

Lade die Apache-Sourcen von http://www.apache.org herunter und entpacke sie. 
Nun wechsele in das neu erzeugte Verzeichnis und rufe "./configure --help" auf, 
das einige sehr praktische Informationen über den Gebrauch des 
configure-Scripts ausgibt.

Nun führe das configure-Script mit den gewünschten Parametern aus, und füge 
dabei die Option "--add-module=/path/to/mod_suphp.c" hinzu.

So wird mod_suphp.c in den Apache-Sourcetree kopiert und aktiviert.

Nun kannst du Apache mit "make" kompilieren und mit "make install" installieren.

Bitte beachte, dass suPHP nicht funktionieren wird, wenn du bereits mod_php 
verwendest.

Um suPHP zu benutzen, um PHP-Dateien zu interpretieren, musst du nur folgende 
Zeile deiner Apache-Konfiguration hinzufügen:

AddHandler x-httpd-php .php

mod_suphp wird aktiviert durch folgende Zeile:

suPHP_Engine on

Diese Zeile kannst du sowohl im globalen Kontext angeben, um mod_suphp für alle 
VirtualHosts zu aktivieren, oder innerhalb eines oder mehrerer VirtualHosts, um 
es nur für diese Hosts zu aktivieren.

Informationen über zusätzliche Optionen findest du in der Datei CONFIG.


II. Als Modul zu einem laufenden Apache hinzufügen

Wenn du einen Aapache mit DSO-Unterstützung betreibst, kannst du mod_suphp mit 
folgender Zeile kompilieren und der Konfiguration hinzufügen:

apxs -a -i -c mod_suphp.c

Möglicherweise ist "apxs" nicht im PATH; in diesem Fall musst du den kompletten 
Pfad angeben.

"apxs" befindet sich normalerweise in $APACHE_PREFIX/sbin/apxs


III. Zusätzliche Informationen

Bitte beachte, dass mod_suphp *NICHT* funktioniert, wenn mod_php bereits im 
Apache-Server aktiviert ist, weil beide den gleichen MIME-Typ "x-httpd-php" 
benutzen.


==============================
(c)2002 by Sebastian Marsching
<sebastian@marsching.com>
Bitte sieh in die Datei LICENSE, um
weitere Informationen zu erhalten.
